#!/bin/bash
set -e

STACK=cloud-android-web
REGION=ap-southeast-2
APP=cloud-android-web

# 1) ‡∏™‡∏£‡πâ‡∏≤‡∏á SSM/Secrets ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ä‡πâ SSM StringParameter)
#  ‡πÅ‡∏Å‡πâ‡∏Ñ‡πà‡∏≤‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
aws ssm put-parameter --name /cloud-android/PAYPAL_CLIENT_ID --type SecureString --value "YOUR_PAYPAL_CLIENT_ID" --overwrite --region $REGION
aws ssm put-parameter --name /cloud-android/PAYPAL_CLIENT_SECRET --type SecureString --value "YOUR_PAYPAL_CLIENT_SECRET" --overwrite --region $REGION
aws ssm put-parameter --name /cloud-android/PAYPAL_ENV --type String --value "sandbox" --overwrite --region $REGION
aws ssm put-parameter --name /cloud-android/OPN_PUBLIC_KEY --type SecureString --value "pkey_test_xxx" --overwrite --region $REGION
aws ssm put-parameter --name /cloud-android/OPN_SECRET_KEY --type SecureString --value "skey_test_xxx" --overwrite --region $REGION
# base URL ‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏£‡∏π‡πâ ALB DNS; ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡∏Å‡πà‡∏≠‡∏ô
aws ssm put-parameter --name /cloud-android/WEBHOOK_URL_BASE --type String --value "http://placeholder" --overwrite --region $REGION

# 2) ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï stack
aws cloudformation deploy \
  --template-file cloud-android-ecs.yml \
  --stack-name $STACK \
  --region $REGION \
  --capabilities CAPABILITY_NAMED_IAM \
  --parameter-overrides AppName=$APP

# 3) ‡∏≠‡πà‡∏≤‡∏ô ECR URI + ALB DNS
ECR_URI=$(aws cloudformation describe-stacks --stack-name $STACK --region $REGION \
  --query "Stacks[0].Outputs[?OutputKey=='ECRRepoUri'].OutputValue" --output text)
ALB_DNS=$(aws cloudformation describe-stacks --stack-name $STACK --region $REGION \
  --query "Stacks[0].Outputs[?OutputKey=='ALBDNS'].OutputValue" --output text)

echo "ECR: $ECR_URI"
echo "ALB: http://$ALB_DNS"

# 4) ‡∏™‡∏£‡πâ‡∏≤‡∏á repo ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ (deploy ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏•‡πâ‡∏ß‡πÇ‡∏î‡∏¢ CFN; ‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏±‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏û‡∏•‡∏≤‡∏î)
aws ecr describe-repositories --repository-names $APP --region $REGION >/dev/null 2>&1 || \
  aws ecr create-repository --repository-names $APP --region $REGION

# 5) Login ECR + build/push image (‡∏ï‡πâ‡∏≠‡∏á cd ‡πÑ‡∏õ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ Dockerfile ‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå)
aws ecr get-login-password --region $REGION \
  | docker login --username AWS --password-stdin ${ECR_URI%/*}
docker build -t $APP .
docker tag $APP:latest $ECR_URI:latest
docker push $ECR_URI:latest

# 6) ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö service rollout
CLUSTER=$(aws cloudformation describe-stacks --stack-name $STACK --region $REGION \
  --query "Stacks[0].Outputs[?OutputKey=='ClusterName'].OutputValue" --output text)
SERVICE=$(aws cloudformation describe-stacks --stack-name $STACK --region $REGION \
  --query "Stacks[0].Outputs[?OutputKey=='ServiceName'].OutputValue" --output text)

aws ecs update-service --cluster $CLUSTER --service $SERVICE --force-new-deployment --region $REGION

# 7) ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï WEBHOOK_URL_BASE ‡πÉ‡∏´‡πâ‡∏ä‡∏µ‡πâ ALB ‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏•‡πâ‡∏ß rollout ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
aws ssm put-parameter --name /cloud-android/WEBHOOK_URL_BASE --type String \
  --value "http://$ALB_DNS" --overwrite --region $REGION

aws ecs update-service --cluster $CLUSTER --service $SERVICE --force-new-deployment --region $REGION

echo "‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô ‚Äî ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: http://$ALB_DNS"
echo "üîî ‡∏ï‡∏±‡πâ‡∏á Webhook: "
echo "   PayPal: http://$ALB_DNS/api/payments/webhook/paypal"
echo "   Omise:  http://$ALB_DNS/api/payments/webhook/opn"
